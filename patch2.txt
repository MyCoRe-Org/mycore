diff --git a/mycore-pi/src/main/java/org/mycore/pi/MCRPICreationEventHandler.java b/mycore-pi/src/main/java/org/mycore/pi/MCRPICreationEventHandler.java
index c79eff0ec..4075c3120 100644
--- a/mycore-pi/src/main/java/org/mycore/pi/MCRPICreationEventHandler.java
+++ b/mycore-pi/src/main/java/org/mycore/pi/MCRPICreationEventHandler.java
@@ -49,11 +49,7 @@ public class MCRPICreationEventHandler extends MCREventHandlerBase {
         final List<String> services = registered.stream().map(MCRPIRegistrationInfo::getService)
             .collect(Collectors.toList());
 
-        //collect all services, which want to create new PIs and are allowed to do so
-        //this avoids cases  where one service does modifications 
-        //which could change the result of the filter method for other services
-        @SuppressWarnings({ "unchecked", "rawtypes" })
-        List<MCRPIJobService> listOfServicesWithCreatablePIs = MCRPIServiceManager.getInstance()
+        List<MCRPIJobService<MCRPersistentIdentifier>> listOfServicesWithCreatablePIs = MCRPIServiceManager.getInstance()
             .getAutoCreationList().stream()
             .filter(Predicate.not(s -> services.contains(s.getServiceID())))
             .filter(s -> s.getCreationPredicate().test(obj))
diff --git a/mycore-pi/src/main/java/org/mycore/pi/MCRPIServiceManager.java b/mycore-pi/src/main/java/org/mycore/pi/MCRPIServiceManager.java
index 8ada51bd6..e8aa113ba 100644
--- a/mycore-pi/src/main/java/org/mycore/pi/MCRPIServiceManager.java
+++ b/mycore-pi/src/main/java/org/mycore/pi/MCRPIServiceManager.java
@@ -39,18 +39,18 @@ public class MCRPIServiceManager {
                 .collect(Collectors.toList());
     }
 
-    public List<MCRPIService> getServiceList() {
+    public List<MCRPIService<MCRPersistentIdentifier>> getServiceList() {
         return getServiceIDList()
             .stream()
             .map(this::getRegistrationService)
             .collect(Collectors.toList());
     }
 
-    public List<MCRPIJobService> getAutoCreationList() {
+    public List<MCRPIJobService<MCRPersistentIdentifier>> getAutoCreationList() {
         return getServiceList()
             .stream()
             .filter(service -> service instanceof MCRPIJobService)
-            .map(MCRPIJobService.class::cast)
+            .map(s->(MCRPIJobService<MCRPersistentIdentifier>) s)
             .filter(service -> MCRConfiguration2
                 .getString(REGISTRATION_SERVICE_CONFIG_PREFIX + service.getServiceID() + "." +
                     CREATION_PREDICATE)
@@ -59,8 +59,7 @@ public class MCRPIServiceManager {
     }
 
     public <T extends MCRPersistentIdentifier> MCRPIService<T> getRegistrationService(String id) {
-        return (MCRPIService<T>) MCRConfiguration2
-            .getSingleInstanceOf(MCRPIServiceManager.REGISTRATION_SERVICE_CONFIG_PREFIX + id).get();
+        return MCRConfiguration2.<MCRPIService<T>>getSingleInstanceOf(MCRPIServiceManager.REGISTRATION_SERVICE_CONFIG_PREFIX + id).get();
     }
 
     private static class InstanceHolder {
