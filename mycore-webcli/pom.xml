<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>mycore</artifactId>
    <groupId>org.mycore</groupId>
    <version>2016.06.0.1-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>mycore-webcli</artifactId>
  <name>MyCoRe Web CLI</name>
  <properties>
    <manifest.priority>67</manifest.priority>
    <node.version>v6.2.0</node.version>
    <npm.version>3.9.3</npm.version>
    <frontend.maven.plugin.version>1.0</frontend.maven.plugin.version>
  </properties>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>create-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/node_build/</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/resources/META-INF/resources/modules/webcli</directory>
                  <exclude>node_modules/**</exclude>
                  <exclude>build/**</exclude>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>create-resources-angular</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.build.directory}/classes/META-INF/resources/modules/webcli/node_modules/@angular</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/node_build/node_modules/@angular</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>create-resources-rxjs</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.build.directory}/classes/META-INF/resources/modules/webcli/node_modules/rxjs</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/node_build/node_modules/rxjs</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>create-resources-angular2-in-memory-web-api</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.build.directory}/classes/META-INF/resources/modules/webcli/node_modules/angular2-in-memory-web-api</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/node_build/node_modules/angular2-in-memory-web-api</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>create-resources-core-js</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.build.directory}/classes/META-INF/resources/modules/webcli/node_modules/core-js</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/node_build/node_modules/core-js</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>create-resources-zone-js</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.build.directory}/classes/META-INF/resources/modules/webcli/node_modules/zone.js</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/node_build/node_modules/zone.js</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>create-resources-reflect-metadata</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.build.directory}/classes/META-INF/resources/modules/webcli/node_modules/reflect-metadata</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/node_build/node_modules/reflect-metadata</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
		  <execution>
            <id>create-resources-reflect-system-js</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.build.directory}/classes/META-INF/resources/modules/webcli/node_modules/systemjs</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/node_build/node_modules/systemjs</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>create-resources-build</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>${project.build.directory}/classes/META-INF/resources/modules/webcli/build</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/node_build/build</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${frontend.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>install-node-and-npm</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>${node.version}</nodeVersion>
              <npmVersion>${npm.version}</npmVersion>
            </configuration>
          </execution>
          <execution>
            <id>npm-install</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
              <workingDirectory>target/node_build</workingDirectory>
            </configuration>
          </execution>
          <execution>
            <id>gulp-build</id>
            <goals>
              <goal>gulp</goal>
            </goals>
            <phase>generate-sources</phase>
          </execution>
        </executions>
        <configuration>
          <installDirectory>target/node_build/node</installDirectory>
          <workingDirectory>target/node_build</workingDirectory>
          <skip>${frontend.skip}</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.mycore</groupId>
      <artifactId>mycore-base</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-1.2-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>
	<dependency>
	  <groupId>javax.ws.rs</groupId>
	  <artifactId>jsr311-api</artifactId>
	  </dependency>
	<dependency>
		<groupId>javax.websocket</groupId>
		<artifactId>javax.websocket-api</artifactId>
		<version>1.1</version>
	</dependency>
	<dependency>
	  <groupId>com.sun.jersey</groupId>
	  <artifactId>jersey-server</artifactId>
	  </dependency>
  </dependencies>
</project>
