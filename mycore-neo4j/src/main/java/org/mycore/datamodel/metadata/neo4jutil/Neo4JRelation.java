package org.mycore.datamodel.metadata.neo4jutil;

import java.util.concurrent.ThreadLocalRandom;

import static org.mycore.datamodel.metadata.neo4jutil.MCRNeo4JUtil.removeIllegalRelationshipTypeCharacters;

public record Neo4JRelation(String sourceNodeID, String targetNodeID, String relationshipType) {

   @Override
   public String toString() {
      return "Neo4JRelation{" +
          "sourceNode='" + sourceNodeID + '\'' +
          ", targetNode='" + targetNodeID + '\'' +
          ", relationshipType='" + relationshipType + '\'' +
          '}';
   }

   public String toAppendQuery() {
      StringBuilder sbQuery = new StringBuilder();
      Long random = ThreadLocalRandom.current().nextLong(Long.MAX_VALUE);
      sbQuery.append("MERGE (b").append(random).append(" {id: '").append(targetNodeID).append("'})\n")
            .append("ON CREATE\n")
            .append("  SET b").append(random).append(":AutoGenerated").append(" , b").append(random).append(".id='")
            .append(targetNodeID).append("'\n");

      String filteredType = removeIllegalRelationshipTypeCharacters(relationshipType);

      sbQuery.append("MERGE (a)-[:").append(filteredType).append("]->(b").append(random)
            .append(")\n");

      return sbQuery.toString();
   }

   public String toFullQuery() {
      StringBuilder sbQuery = new StringBuilder();
      Long random = ThreadLocalRandom.current().nextLong(Long.MAX_VALUE);
      sbQuery.append("MERGE (a").append(random).append(" {id: '").append(sourceNodeID).append("'})\n")
            .append("ON CREATE\n")
            .append("  SET a").append(random).append(":AutoGenerated").append(" , a").append(random).append(".id='")
            .append(sourceNodeID).append("'\n");
      sbQuery.append("MERGE (b").append(random).append(" {id: '").append(targetNodeID).append("'})\n")
            .append("ON CREATE\n")
            .append("  SET b").append(random).append(":AutoGenerated").append(" , b").append(random).append(".id='")
            .append(targetNodeID).append("'\n");

      String filteredType = removeIllegalRelationshipTypeCharacters(relationshipType);

      sbQuery.append("MERGE (a").append(random).append(")-[:").append(filteredType).append("]->(b").append(random)
            .append(")\n");

      return sbQuery.toString();
   }
}
