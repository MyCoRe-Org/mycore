MCR.URIResolver.ModuleResolver.user=org.mycore.user2.MCRUserResolver
MCR.URIResolver.ModuleResolver.group=org.mycore.user2.MCRRoleResolver
MCR.URIResolver.ModuleResolver.realm=org.mycore.user2.MCRRealmResolver

MCR.user2.LoginHttpsOnly=false
MCR.user2.LoginAllowedRoles=

MCR.CLI.Classes.Internal=%MCR.CLI.Classes.Internal%,org.mycore.user2.MCRUserCommands
MCR.Hibernate.Mappings=%MCR.Hibernate.Mappings%,org.mycore.user2.MCRUser
MCR.JPA.MappingFileNames=%MCR.JPA.MappingFileNames%,META-INF/mycore-user2-mappings.xml

MCR.User.Local.PasswordPattern=[\\S]{6\,}

MCR.Users.Superuser.UserName=administrator
MCR.Users.Superuser.UserPasswd=alleswirdgut
MCR.Users.Superuser.UserEmail=
MCR.Users.Superuser.GroupName=admin

MCR.UserInformation.Resolver.Providers.user.Class=org.mycore.user2.MCRUserProvider

MCR.User.PasswordCheck.Random.Algorithm=SHA1PRNG

# Crypt: was used in the old MyCoRe user system
MCR.User.PasswordCheck.Strategies.crypt.Class=org.mycore.user2.hash.MCRCryptStrategy

# MD5: was used in the old MILESS user system
MCR.User.PasswordCheck.Strategies.md5.Class=org.mycore.user2.hash.MCRMD5Strategy
MCR.User.PasswordCheck.Strategies.md5.Iterations=1

# SHA1: was the default in the new MyCore user system until 2014.02
MCR.User.PasswordCheck.Strategies.sha1.Class=org.mycore.user2.hash.MCRSHA1Strategy
MCR.User.PasswordCheck.Strategies.sha1.SaltSizeBytes=8
MCR.User.PasswordCheck.Strategies.sha1.Iterations=1000

# SHA256: was the default in the new MyCore user system until 2024.06
MCR.User.PasswordCheck.Strategies.sha256.Class=org.mycore.user2.hash.MCRSHA256Strategy
MCR.User.PasswordCheck.Strategies.sha256.SaltSizeBytes=8
MCR.User.PasswordCheck.Strategies.sha256.Iterations=1000

# SHA512: 
MCR.User.PasswordCheck.Strategies.sha512.Class=org.mycore.user2.hash.MCRSHA512Strategy
MCR.User.PasswordCheck.Strategies.sha512.SaltSizeBytes=16
MCR.User.PasswordCheck.Strategies.sha512.Iterations=1000000

# PBKDF2: is the current default in the new MyCore user system
MCR.User.PasswordCheck.Strategies.pbkdf2.Class=org.mycore.user2.hash.MCRPBKDF2Strategy
MCR.User.PasswordCheck.Strategies.pbkdf2.SaltSizeBytes=32
MCR.User.PasswordCheck.Strategies.pbkdf2.HashSizeBytes=64
MCR.User.PasswordCheck.Strategies.pbkdf2.Iterations=600000

# BCrypt: requires optional dependency at.favre.lib:bcrypt to be on the classpath
# MCR.User.PasswordCheck.Strategies.bcrypt.Class=org.mycore.user2.hash.MCRBCryptStrategy
# MCR.User.PasswordCheck.Strategies.bcrypt.Cost=13

# Argon2: requires optional dependency org.bouncycastle:bcprov-jdk18on to be on the classpath
# MCR.User.PasswordCheck.Strategies.argon2.Class=org.mycore.user2.hash.MCRArgon2Strategy
# MCR.User.PasswordCheck.Strategies.argon2.SaltSizeBytes=32
# MCR.User.PasswordCheck.Strategies.argon2.HashSizeBytes=64
# MCR.User.PasswordCheck.Strategies.argon2.Iterations=8
# MCR.User.PasswordCheck.Strategies.argon2.MemoryLimitKiloBytes=66536
# MCR.User.PasswordCheck.Strategies.argon2.Parallelism=1

MCR.User.PasswordCheck.Strategy=pbkdf2


##############################################################################
# The MCREventHandler configurations
##############################################################################
# can be used to persist transient user (shibboleth or ...)
#MCR.EventHandler.MCRObject.110.Class=org.mycore.user2.events.MCRPersistTransientUserEventHandler
