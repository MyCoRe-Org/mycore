<?xml version="1.0"?>
<ruleset name="MyCoRe ruleset" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

  <description>
    This ruleset applies MyCoRe standard rules
  </description>

  <!-- ECMA Script Rules (Include entire ruleset) -->
  <rule ref="category/ecmascript/codestyle.xml"/>
  <!-- XML Error Prone Rules (Include entire ruleset) -->
  <rule ref="category/xml/errorprone.xml"/>
  <!-- XSL Code Style Rules -->
  <rule ref="category/xsl/codestyle.xml/UseConcatOnce"/>

  <!-- Best Practices Rules -->
  <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod"/>
  <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly"/>
  <rule ref="category/java/bestpractices.xml/AvoidMessageDigestField"/>
  <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace"/>
  <rule ref="category/java/bestpractices.xml/AvoidReassigningCatchVariables"/>
  <rule ref="category/java/bestpractices.xml/AvoidReassigningLoopVariables">
    <properties>
      <property name="foreachReassign" value="allow"/>
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/CheckResultSet"/>
  <rule ref="category/java/bestpractices.xml/ConstantsInInterface"/>
  <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitch"/>
  <rule ref="category/java/bestpractices.xml/DoubleBraceInitialization"/>
  <rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach"/>
  <rule ref="category/java/bestpractices.xml/ForLoopVariableCount"/>
  <rule ref="category/java/bestpractices.xml/GuardLogStatement"/>
  <rule ref="category/java/bestpractices.xml/JUnit4SuitesShouldUseSuiteAnnotation"/>
  <rule ref="category/java/bestpractices.xml/UnitTestShouldUseAfterAnnotation"/>
  <rule ref="category/java/bestpractices.xml/UnitTestShouldUseBeforeAnnotation"/>
  <rule ref="category/java/bestpractices.xml/UnitTestShouldUseTestAnnotation"/>
  <rule ref="category/java/bestpractices.xml/JUnit5TestShouldBePackagePrivate"/>
  <rule ref="category/java/bestpractices.xml/UnitTestShouldIncludeAssert"/>
  <rule ref="category/java/bestpractices.xml/LooseCoupling">
    <properties>
      <property name="allowedTypes" value="java.util.Properties,
      org.mycore.frontend.basket.MCRBasket,
      org.mycore.services.queuedjob.MCRJobQueue,
      org.mycore.oai.pmh.OAIDataList,
      org.apache.solr.common.SolrInputDocument,
      org.apache.solr.common.SolrDocumentList,
      org.apache.solr.common.SolrDocument"/>
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray"/>
  <rule ref="category/java/bestpractices.xml/MissingOverride"/>
  <rule ref="category/java/bestpractices.xml/OneDeclarationPerLine"/>
  <rule ref="category/java/bestpractices.xml/PreserveStackTrace"/>
  <rule ref="category/java/bestpractices.xml/PrimitiveWrapperInstantiation"/>
  <rule ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator"/>
  <rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap"/>
  <rule ref="category/java/bestpractices.xml/ReplaceVectorWithList"/>
  <rule ref="category/java/bestpractices.xml/SimplifiableTestAssertion"/>
  <rule ref="category/java/bestpractices.xml/NonExhaustiveSwitch"/>
  <rule ref="category/java/bestpractices.xml/SystemPrintln"/>
  <rule ref="category/java/bestpractices.xml/UnnecessaryVarargsArrayCreation"/>
  <rule ref="category/java/bestpractices.xml/UnusedAssignment"/>
  <rule ref="category/java/bestpractices.xml/UnusedFormalParameter"/>
  <rule ref="category/java/bestpractices.xml/UnusedLocalVariable"/>
  <rule ref="category/java/bestpractices.xml/UnusedPrivateField"/>
  <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod"/>
  <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty"/>
  <rule ref="category/java/bestpractices.xml/UseEnumCollections"/>
  <rule ref="category/java/bestpractices.xml/UseStandardCharsets"/>
  <rule ref="category/java/bestpractices.xml/UseTryWithResources"/>

  <!-- Code Style Rules -->
  <rule ref="category/java/codestyle.xml/AvoidDollarSigns"/>
  <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass"/>
  <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending"/>
  <rule ref="category/java/codestyle.xml/ControlStatementBraces"/>
  <rule ref="category/java/codestyle.xml/EmptyControlStatement">
    <properties>
      <property name="allowCommentedBlocks" value="true"/>
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ExtendsObject"/>
  <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass"/>
  <rule ref="category/java/codestyle.xml/FieldNamingConventions"/>
  <rule ref="category/java/codestyle.xml/FinalParameterInAbstractMethod"/>
  <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop"/>
  <rule ref="category/java/codestyle.xml/FormalParameterNamingConventions"/>
  <rule ref="category/java/codestyle.xml/IdenticalCatchBranches"/>
  <rule ref="category/java/codestyle.xml/LambdaCanBeMethodReference"/>
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/codestyle.xml/LinguisticNaming"/>
  -->
  <rule ref="category/java/codestyle.xml/LocalVariableNamingConventions"/>
  <rule ref="category/java/codestyle.xml/MethodNamingConventions"/>
  <rule ref="category/java/codestyle.xml/NoPackage"/>
  <rule ref="category/java/codestyle.xml/PackageCase"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryAnnotationValueElement"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryBoxing"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryCast"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryConstructor"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryImport"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryModifier"/>
  <rule ref="category/java/codestyle.xml/UnnecessaryReturn"/>
  <rule ref="category/java/codestyle.xml/UnnecessarySemicolon"/>
  <rule ref="category/java/codestyle.xml/UseDiamondOperator"/>
  <rule ref="category/java/codestyle.xml/UselessQualifiedThis"/>
  <rule ref="category/java/codestyle.xml/UseShortArrayInitializer"/>
  <rule ref="category/java/codestyle.xml/UseUnderscoresInNumericLiterals"/>

  <!-- Design Rules -->
  <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod"/>
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts">
    <properties>
      <property name="problemDepth" value="4"/>
    </properties>
  </rule>
  -->
  <rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException"/>
  <rule ref="category/java/design.xml/AvoidThrowingNullPointerException"/>
  <rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes"/>
  <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
  <rule ref="category/java/design.xml/CognitiveComplexity">
    <properties>
      <property name="reportLevel" value="30"/>
    </properties>
  </rule>
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/design.xml/CyclomaticComplexity">
    <properties>
      <property name="classReportLevel" value="80"/>
      <property name="methodReportLevel" value="10"/>
    </properties>
  </rule>
  -->
  <rule ref="category/java/design.xml/DoNotExtendJavaLangError"/>
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/design.xml/ExceptionAsFlowControl"/>
  -->
  <rule ref="category/java/design.xml/ExcessiveParameterList"/>
  <rule ref="category/java/design.xml/FinalFieldCouldBeStatic"/>
  <rule ref="category/java/design.xml/InvalidJavaBean"/>
  <rule ref="category/java/design.xml/MutableStaticState"/>
  <rule ref="category/java/design.xml/NcssCount"/>
  <rule ref="category/java/design.xml/NPathComplexity"/>
  <rule ref="category/java/design.xml/SimplifyConditional"/>
  <rule ref="category/java/design.xml/SingularField"/>
  <rule ref="category/java/design.xml/UselessOverridingMethod"/>
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/design.xml/UseObjectForClearerAPI"/>
  -->
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/design.xml/UseUtilityClass"/>
  -->

  <!-- Error Prone Rules -->
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/errorprone.xml/AssignmentInOperand"/>
  -->
  <rule ref="category/java/errorprone.xml/AssignmentToNonFinalStatic"/>
  <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop"/>
  <rule ref="category/java/errorprone.xml/AvoidCatchingNPE"/>
  <rule ref="category/java/errorprone.xml/AvoidCatchingThrowable"/>
  <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
  <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals">
    <properties>
      <property name="exceptionList" value="unchecked,rawtypes" />
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidEnumAsIdentifier" />
  <rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause"/>
  <rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation"/>
  <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators"/>
  <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues"/>
  <rule ref="category/java/errorprone.xml/BrokenNullCheck"/>
  <rule ref="category/java/errorprone.xml/CheckSkipResult"/>
  <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray"/>
  <rule ref="category/java/errorprone.xml/CloneMethodMustBePublic"/>
  <rule ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable"/>
  <rule ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName"/>
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/errorprone.xml/CloseResource"/>
  -->
  <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals"/>
  <rule ref="category/java/errorprone.xml/ComparisonWithNaN"/>
  <rule ref="category/java/errorprone.xml/DetachedTestCase"/>
  <rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly"/>
  <rule ref="category/java/errorprone.xml/DoNotExtendJavaLangThrowable"/>
  <rule ref="category/java/errorprone.xml/DoNotHardCodeSDCard"/>
  <rule ref="category/java/errorprone.xml/DoNotTerminateVM"/>
  <rule ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally"/>
  <rule ref="category/java/errorprone.xml/DontImportSun"/>
  <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices"/>
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/errorprone.xml/EmptyCatchBlock"/>
  -->
  <rule ref="category/java/errorprone.xml/EmptyFinalizer"/>
  <rule ref="category/java/errorprone.xml/EqualsNull"/>
  <rule ref="category/java/errorprone.xml/IdempotentOperations"/>
  <rule ref="category/java/errorprone.xml/ImplicitSwitchFallThrough"/>
  <rule ref="category/java/errorprone.xml/InstantiationToGetClass"/>
  <rule ref="category/java/errorprone.xml/JumbledIncrementer"/>
  <rule ref="category/java/errorprone.xml/JUnitSpelling"/>
  <rule ref="category/java/errorprone.xml/JUnitStaticSuite"/>
  <rule ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass"/>
  <rule ref="category/java/errorprone.xml/MisplacedNullCheck"/>
  <rule ref="category/java/errorprone.xml/MissingSerialVersionUID"/>
  <rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass"/>
  <rule ref="category/java/errorprone.xml/MoreThanOneLogger"/>
  <rule ref="category/java/errorprone.xml/NonCaseLabelInSwitch"/>
  <rule ref="category/java/errorprone.xml/NonSerializableClass"/>
  <rule ref="category/java/errorprone.xml/NonStaticInitializer"/>
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode"/>
  -->
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/errorprone.xml/ProperCloneImplementation"/>
  -->
  <!-- to be evaluated -->
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/errorprone.xml/ReturnEmptyCollectionRatherThanNull"/>
  -->
  <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock"/>
  <rule ref="category/java/errorprone.xml/SimpleDateFormatNeedsLocale"/>
  <rule ref="category/java/errorprone.xml/SingleMethodSingleton"/>
  <rule ref="category/java/errorprone.xml/SingletonClassReturningNewInstance"/>
  <rule ref="category/java/errorprone.xml/StringBufferInstantiationWithChar"/>
  <rule ref="category/java/errorprone.xml/SuspiciousEqualsMethodName"/>
  <rule ref="category/java/errorprone.xml/SuspiciousHashcodeMethodName"/>
  <rule ref="category/java/errorprone.xml/SuspiciousOctalEscape"/>
  <rule ref="category/java/errorprone.xml/UnconditionalIfStatement"/>
  <rule ref="category/java/errorprone.xml/UnnecessaryBooleanAssertion"/>
  <rule ref="category/java/errorprone.xml/UnnecessaryCaseChange"/>
  <rule ref="category/java/errorprone.xml/UnnecessaryConversionTemporary"/>
  <rule ref="category/java/errorprone.xml/UnusedNullCheckInEquals"/>
  <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings"/>
  <rule ref="category/java/errorprone.xml/UselessOperationOnImmutable"/>
  <rule ref="category/java/errorprone.xml/UseLocaleWithCaseConversions"/>
  <rule ref="category/java/errorprone.xml/UseProperClassLoader"/>

  <!-- Multithreading Rules -->
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel"/>
  -->
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/multithreading.xml/AvoidSynchronizedStatement"/>
  -->
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/multithreading.xml/DoNotUseThreads"/>
  -->
  <rule ref="category/java/multithreading.xml/DontCallThreadRun"/>
  <rule ref="category/java/multithreading.xml/DoubleCheckedLocking"/>
  <rule ref="category/java/multithreading.xml/NonThreadSafeSingleton"/>
  <rule ref="category/java/multithreading.xml/UnsynchronizedStaticFormatter"/>
  <!-- TODO: Create PR to fix this rule -->
  <!--
  <rule ref="category/java/multithreading.xml/UseConcurrentHashMap"/>
  -->
  <rule ref="category/java/multithreading.xml/UseNotifyAllInsteadOfNotify"/>

  <!-- Performance Rules -->
  <rule ref="category/java/performance.xml/AddEmptyString"/>
  <rule ref="category/java/performance.xml/AppendCharacterWithChar"/>
  <rule ref="category/java/performance.xml/AvoidArrayLoops"/>
  <rule ref="category/java/performance.xml/AvoidCalendarDateCreation"/>
  <rule ref="category/java/performance.xml/AvoidFileStream"/>
  <rule ref="category/java/performance.xml/BigIntegerInstantiation"/>
  <rule ref="category/java/performance.xml/InefficientEmptyStringCheck"/>
  <rule ref="category/java/performance.xml/InefficientStringBuffering"/>
  <rule ref="category/java/performance.xml/OptimizableToArrayCall"/>
  <rule ref="category/java/performance.xml/RedundantFieldInitializer"/>
  <rule ref="category/java/performance.xml/StringInstantiation"/>
  <rule ref="category/java/performance.xml/StringToString"/>
  <rule ref="category/java/performance.xml/UseArrayListInsteadOfVector"/>
  <rule ref="category/java/performance.xml/UseArraysAsList"/>
  <rule ref="category/java/performance.xml/UseIndexOfChar"/>
  <rule ref="category/java/performance.xml/UseIOStreamsWithApacheCommonsFileItem"/>
  <rule ref="category/java/performance.xml/UselessStringValueOf"/>
  <rule ref="category/java/performance.xml/UseStringBufferForStringAppends"/>
  <rule ref="category/java/performance.xml/UseStringBufferLength"/>

  <!-- Security Rules (Include entire ruleset) -->
  <rule ref="category/java/security.xml"/>

  <!-- Custom MyCoRe rules  -->
  <rule ref="rules.xml"/>

</ruleset>
